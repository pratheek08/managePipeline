# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
 
trigger:
- main
 
resources:
- repo: self
 
variables:
 
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'a9189c9d-80e9-496a-b870-e51c75832783'
  imageRepository: 'nodepractice'
  containerRegistry: 'barathacrtest.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'barathacrtest53b6-auth'
 
  # Agent VM image name
pool:
  name: 'working-pool'
 
 
 
 
stages:
 
 
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          npm install --produciton
          npm test -- --passWithNoTests
 
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
 
    - upload: manifests
      artifact: manifests
 
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
 
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'nodepractice.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
 
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
 
